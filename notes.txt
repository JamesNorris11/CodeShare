******* DON'T DELETE ANY OF THESE NOTES *******
******* DON'T DELETE ANY OF THESE NOTES *******
******* DON'T DELETE ANY OF THESE NOTES *******

http://stackoverflow.com/questions/5190758/correct-way-to-use-mysql-database-in-multiple-php-files

what class should things like addpost() and deletepost() methods be in? How should the class structure be?

https://code.tutsplus.com/tutorials/simple-php-class-based-querying--net-11863

classes:
post
db
person
and another one to have methods like addPost and deletePost?

error handling - check with classes not loading etc - document all of this

max limit on post (8000) and all other entry sizes

email confirmation - legit email address

error reporting - don't show?

I HAVEN'T INCLUDED DB CONFIG FILE IN GIT OR AUTO UPLOAD B/C IT CONTAINS PASSWORD

http://stackoverflow.com/questions/27787607/method-not-found-in-class


Make SQL statements secure - mysqli? PDO?

check IDs don't already exist for both post and user when inserting

make sure can't use same display name or email etc - and that there's error checking for this as well in the database as well as else where

display search results on multiple pages ?


instructions/help page?

finishing designing pages
login system
form validation
geshi highlighting
search function
cookies for login system
email validation system
password/username recovery system
sessions for locked posts
google captcha system
profile page
forgotten password
make change buttons work with functionality on profile page
about/welcome page?
make error messages show as page changes e.g. succesfully logged in

research for colours https://material.io/guidelines/style/color.html#color-color-palette ?? didn't use in the end

test which tabs show on title bar

PHP provides a built-in password hashing library that uses the bcrypt algorithm, currently considered the best algorithm for password hashing.
https://phpbestpractices.org/
-- but not using a salt?
"Many sources will recommend that you also “salt” your password before hashing it.
That’s a great idea, and password_hash() already salts your password for you. That means that you don’t have to salt it yourself."

https://phpbestpractices.org/
PHPMailer at Github

Validating email addresses
Use the filter_var() function.
$email = filter_var($email, FILTER_SANITIZE_EMAIL); <-- ?

lots of DB methods would currently return NULL, this is not being dealth with with error checking....


to write about hacking through character encoding ????

http://stackoverflow.com/questions/279170/utf-8-all-the-way-through
1st response to "UTF-8 all the way through"

for secure login *sessions*:
http://www.wikihow.com/Create-a-Secure-Login-Script-in-PHP-and-MySQL

http://stackoverflow.com/questions/12091951/php-sessions-login-with-remember-me <--
first few answers are also helpful

initially used htmlentities() only for content then realised it needed to be from literally any output that initially came from user input

test other languages to make sure syntax highlighting works

invisible google reCaptcha

check if email/displayname already exists

talk about not using cookies, just used sessions

/* temp notes
make search results use GET not POST

google at what point you should create variable, e.g. if only going to use it twice


user can type in any password and go to paste.php

when enter correct password it doesn't let you go back to it later without putting password in

make only correct tabs show
*/

https://github.com/PHPMailer/PHPMailer <-- phpMailer

write about test function testMail()

tested ";hello@ok.com"

realised that /[a-zA-Z0-9_\.-]+@[a-zA-Z0-9_\.-]+\.[a-zA-Z0-9_\.-]+/ needed to become
/^[a-zA-Z0-9_\.-]+@[a-zA-Z0-9_\.-]+\.[a-zA-Z0-9_\.-]+$/

jquery fields error not going away when using google chrome autofill - talk about problems like this

Not done:
Email validation system
cookies for login
captcha system
limit posts per page
mobile/different size responsive page


try and put syntax highlighting in document

further work:
browser compatiblity

TALK ABOUT USE OF JQUERY AND THAT IT'S NOT MINE - ABOUT USER FEEDBACK ON FORMS AND THAT'S WHY I USED IT


THINGS IN INITIAL REQUIREMENTS THAT DIDN'T ADD:
CAPTCHA SYSTEM
COOKIES FOR LOGIN SYSTEM

THING THAT IS FUTURE POSSIBILITY AS WASN'#T IN SCOPE IN FIRST PLACE AS TOO MUCH WORK:
mobile/different size responsive page

make sure headers for sections don't end up on different pages in document - final report

future idea:
post exposure (e.g. unlisted) and post expiration date
SAY THAT SO MANY INFINITE IDEAS that I just had to include most important ones - so many many potential expansions.


IS SOME OF THE INFORMATION TOO IMPORTANT IN APPENDIX? MIGHT IT BE MARKED
 WITHOUT THIS? DO I NEED TO PUT IT IN THE MAIN DOCUMENT?

 make sure show JS clever stuff in images


 talk about complexities of UserID -> display name
 and that login is by email

 GET DAD TO READ REPORT AND TELL ME IF IT REALLY SELLS MY PROJECT AS MUCH AS IT SHOULD

 MAKE SURE SOMEWHERE TALK ABOUT REGULAR EXPRESSIONS

 talk about sample data

 security in implementation chapter - talk about input validation – give full list of things that I’m checking e.g. in adduser.php or addpost.php

SECURITY - TALK ABOUT HOW NOT JUST JS VALIDATION AND WHY - THERE'S ALSO PHP VALIDATION

security - talk about secdurity of dbConfig.php - about how PPH should be executed and not accessible by client - but can have errors where php doesn't
run so need to protect from that

Talk about "being directed" to pages like changedetails.php , the brtowser will be directed but they will never actually see it


DID I COVER ALL SECURITY TOPICS???